[server]
hostname = "mx.example.org"
greeting = "Stalwart SMTP v0.1 at your service"
protocol = "smtp"

[server.listener.smtp]
bind = ["0.0.0.0:25"]

[server.listener.smtps]
bind = ["0.0.0.0:465"]

[server.tls]
enable = true,
implicit = true,
implicit.smtp = false
timeout = 300
certificate = default
sni = [{subject = "domain.org", certificate = "abc"}]
protocols = ["TLSv1.2", TLSv1.3"]
ciphers = ["cipher1", "cipher2"]
ignore_client_order = true

[server.socket]
reuse-addr = true
reuse-port = true
backlog = 1024,
#ttl = 3600,
#send-buffer-size = 65535,
#recv-buffer-size = 65535,
#linger = 1,
#tos = 1,

[stage]

[stage.connect]
script = "connect.sieve"
throttle.local = {key = ["remoteip", "localip"], concurrency = 1000, rate = [3, 10]}
throttle = {concurrency = 10000, rate = [3, 10]}

[stage.ehlo]
require = true
extensions.submission = ["deliveryby"]
extensions = "chunking, pipeline, smtputf8, starttls"
script = ehlo.sieve
authenticate = spf
commands = 1
timeout = 10

[stage.auth]
require = true
require-tls = true
auth-host = "auth-server"
mechanisms = "plain, login"
limits = {idle = 10, errors = 3, errors-wait = 10}

[stage.mail]
authenticate = spf
authenticate.submission = none
script = mail-from.sieve
limits = {idle = 10, messages = 10}
throttle = {key = "mail-from", concurrency = 10, rate = [3, 60]}

[stage.rcpt]
script = rcpt-to.sieve
local-domains = list-domains
local-addresses = list-addresses
cache = { entries = 1000, ttl-positive = 10, ttl-negative = 5 }
limits = { idle = 10, max-recipients = 100, errors = 5 }
throttle = {key = "rcpt-to", concurrency = 10, rate = [3, 60]}

[stage.data]
authenticate = [dkim, arc, dmarc]
sign = dkim, arc
script = data.sieve
limits = { idle = 10, size = 100000, received-headers = 50, mime-parts = 50, nested-messages = 3 }

[stage.quit]
script = quit.sieve

[stage.disconnect]
script = disconnect.sieve

[external]

[external.lmtp]
address = 192.168.0.1
port = 25
protocol = "lmtp"
auth.username = "hello"
auth.password = "world"
tls = "optional, require, dane, dane-fallback-require, dane-require

[queue]
retry = [0, 1, 15, 60, 90]
notify = [9, 10]
prefer = ipv6
source-ips = ["192.168.0.2", "162.168.0.1"]
tls = optional, require, dane, dane-fallback-require, dane-require
limits = { attempts = 100, time = 3600, queued-messages = 10000, queue-size = 1000000 }
limits.ip = { rate = 1/60, concurrency = 100, key = localip, remote-ip, remote-mx }
throttle = { rate = 1/60, concurrency = 1000, key = all }
smart-host.is-local = lmtp


[rules]

[rules."is-local"]
rcpt-domain = ["*.example.org"]
rcpt-to = [""]
server-id = "relay"
mx = ["mx.gmail.com", "mx.coco.com"]
remote-ip = [192.168.0.32/1]
priority = 1



[resolver]
type = system, google, cloudflare
dnssec = true
preserve-intermediates = true

[resolver.limits]
concurrency = 2
timeout = 100
attempts = 3

[resolver.cache]
a = 1000
mx = 9393
txt = 3233

[general.spool]
path = "/var/spool/queue"
hash = 123

[scripts]

[scripts.ehlo]
data = this is my script

[lists]

[lists.localdomains]
data = ["example.org", "*.example.net"]

[list.localaddresses]
server = lmtp

[servers."relay".outgoing.dsn]
name = "Mail Delivery Subsystem"
address = "MAILER-DAEMON"
subject = "Delivery Status Notification"

[servers."relay".outgoing.auth-failure]
name = "Autentication Report"
address = "noreply-auth-failure"
subject = "Authentication Failure Report"

[servers."relay".outgoing.dmarc]
name = "DMARC report"
address = "noreply-dmarc"
subject = "DMARC aggregate report for $1"

[servers."relay".dmarc]
send-reports = true
report-frequency = requested, 86400
incoming-address = "dmarc@*"

[certificate.default]
type = "rsa"
cert = '''
-----BEGIN CERTIFICATE-----
'''
pki = '''
-----BEGIN PRIVATE KEY-----
'''

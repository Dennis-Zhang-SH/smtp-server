[server]
hostname = "mx.example.org"
greeting = "Stalwart SMTP v0.1 at your service"
protocol = "smtp"

[[server.listener]]
id = "smtp"
bind = ["0.0.0.0:25"]
tls.implicit = false

[[server.listener]]
id = "smtps"
bind = ["0.0.0.0:465"]
tls.implicit = true
tls.sni = [{subject = "domain.org", certificate = "abc"}]
socket.backlog = 1024

[[server.listener]]
id = "submission"
bind = ["0.0.0.0:465"]
tls = {implicit = true}

[server.tls]
enable = true,
implicit = true,
timeout = 300
certificate = default
sni = [{subject = "domain.org", certificate = "abc"}]
protocols = ["TLSv1.2", TLSv1.3"]
ciphers = ["cipher1", "cipher2"]
ignore_client_order = true

[server.socket]
reuse-addr = true
reuse-port = true
backlog = 1024,
#ttl = 3600,
#send-buffer-size = 65535,
#recv-buffer-size = 65535,
#linger = 1,
#tos = 1,

[stage]

[stage.connect]
script = "connect.sieve"
concurrency = 10000
throttle = [
    {key = ["remoteip", "localip"], concurrency = 10000, rate = "3/5m"},
]

[[stage.connect.rule]]
match-if = {remote-ip = "127.0.0.1"}
throttle = {key = ["remoteip", "localip"], concurrency = 1000, rate = [3, 10]}

[stage.ehlo]
require = true
script = ehlo.sieve
authenticate = {spf = "strict"}
timeout = "5m"
max-ehlos = 1

[stage.ehlo.capabilities]
pipelining = true
chunking = true
requiretls = true
no-soliciting = ""
auth = []
dsn = true
future-release = false
deliver-by = false
mt-priority = false
size = 100000
expn = false

[[stage.ehlo.rule]]
match-if = {listener = "submission"}
authenticate = {spf = "none"}
capabilities = {expn = true, auth = ["mechanism"], dsn = true, future-release = "5d", deliver-by = "30m", mt-priority = "mixer"}

[stage.auth]
auth-host = "auth-server"
require = false
timeout = 10
errors = {total = 3, wait = "5s"}

[[stage.auth.rule]]
match-if = {listener = "submission"}
require = true

[stage.mail]
auth = {spf = "strict"}
script = mail-from.sieve
timeout = 10
throttle = {key = "mail-from", concurrency = 10, rate = [3, 60]}

[[stage.mail.rule]]
match-if = {id = "submission"}
authenticate = {spf = "disable"}
#capabilities = {deliver-by = "1000s", future-release = "1000s"}

[stage.rcpt]
script = rcpt-to.sieve
local-domains = "list-domains"
local-addresses = "list-addresses"
cache = { entries = 1000, ttl-positive = 10, ttl-negative = 5 }
throttle = [{key = "rcpt-to", concurrency = 10, rate = [3, 60]}]
errors = {total = 3, wait = "5s"}
timeout = "5m"
max-recipients = 100

[[stage.rcpt.rule]]
match-if = {id = "submission"}
max-recipients = 1000

[stage.data]
authenticate = {dkim = "true", arc = "true", dmarc = "true"}
script = data.sieve
timeout = "10s"
add-headers = ["arc-seal", "received-spf", "authentication-results", "return-path", "received"]

[stage.data.limits]
messages = 10
message-size = 100000
received-headers = 50
mime-parts = 50
nested-messages = 3

[[stage.data]]
match-if = {id = "submission"}
authenticate = {dkim = "false", arc = "false", dmarc = "false"}
add-headers = ["dkim-signature", "arc-seal", "return-path", "received"]

[stage.disconnect]
script = disconnect.sieve

[external]

[external.lmtp]
address = 192.168.0.1
port = 25
protocol = "lmtp"
auth.username = "hello"
auth.password = "world"
tls = "optional, require, dane, dane-fallback-require, dane-require

[queue]
retry = [0, 1, 15, 60, 90]
notify = [9, 10]
prefer = ipv6
source-ips = ["192.168.0.2", "162.168.0.1"]
tls = optional, require, dane, dane-fallback-require, dane-require
limits = { attempts = 100, time = 3600, queued-messages = 10000, queue-size = 1000000 }
throttle = { rate = 1/60, concurrency = 1000, key = all }

[[queue.virtual]]
match-if = {rcpt-domain = "*.example.org"}
id = "local"
relay-host = "lmtp"


[rules]

[rules."is-local"]
rcpt-domain = ["*.example.org"]
rcpt = [""]
server-id = "relay"
mx = ["mx.gmail.com", "mx.coco.com"]
remote-ip = [192.168.0.32/1]
priority = 1

[resolver]
type = system, google, cloudflare
dnssec = true
preserve-intermediates = true

[resolver.limits]
concurrency = 2
timeout = 100
attempts = 3

[resolver.cache]
a = 1000
mx = 9393
txt = 3233

[general.spool]
path = "/var/spool/queue"
hash = 123

[scripts]

[scripts.ehlo]
data = this is my script

[lists]

[lists.localdomains]
data = ["example.org", "*.example.net"]

[list.localaddresses]
server = lmtp

[servers."relay".outgoing.dsn]
name = "Mail Delivery Subsystem"
address = "MAILER-DAEMON"
subject = "Delivery Status Notification"

[servers."relay".outgoing.auth-failure]
name = "Autentication Report"
address = "noreply-auth-failure"
subject = "Authentication Failure Report"

[servers."relay".outgoing.dmarc]
name = "DMARC report"
address = "noreply-dmarc"
subject = "DMARC aggregate report for $1"

[servers."relay".dmarc]
send-reports = true
report-frequency = requested, 86400
incoming-address = "dmarc@*"

[certificate.default]
type = "rsa"
cert = '''
-----BEGIN CERTIFICATE-----
'''
pki = '''
-----BEGIN PRIVATE KEY-----
'''

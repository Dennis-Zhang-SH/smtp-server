[server]
hostname = "mx.example.org"
greeting = "Stalwart SMTP v0.1 at your service"
protocol = "smtp"

[server.listener."smtp"]
bind = ["0.0.0.0:25"]
tls.implicit = false

[server.listener."smtps"]
bind = ["0.0.0.0:465"]
tls.implicit = true
tls.sni = [{subject = "domain.org", pki = "abc"}]
socket.backlog = 1024

[server.listener."submission"]
bind = ["0.0.0.0:465"]
tls = {implicit = true}

[server.tls]
enable = true,
implicit = true,
timeout = 300
pki = default
sni = [{subject = "domain.org", pki = "abc"}]
protocols = ["TLSv1.2", TLSv1.3"]
ciphers = ["cipher1", "cipher2"]
ignore_client_order = true

[server.socket]
reuse-addr = true
reuse-port = true
backlog = 1024,
#ttl = 3600,
#send-buffer-size = 65535,
#recv-buffer-size = 65535,
#linger = 1,
#tos = 1,

[stage]

[stage.connect]
script = "connect.sieve"
concurrency = 10000
timeout = 10

[[stage.connect.throttle]]
key = ["remoteip", "localip"]
concurrency = 10000
rate = "3/5m"

[stage.ehlo]
require = true
script = ehlo.sieve
timeout = "5m"
max-ehlos = 1

[stage.ehlo.capabilities]
pipelining = true
chunking = true
requiretls = true
no-soliciting = ""
dsn = true
future-release = [
    {if = "is-submission", then = "5d"},
    {else = false}
]
deliver-by = false
mt-priority = false
size = 100000
expn = false

[stage.auth]
enable = [
    {if = "is-submission", then = ["plain", "login"]},
    {else = []}
]
require = [
    {if = "is-submission", then = true},
    {else = false}
]
auth-host = "auth-server"
errors = {total = 3, wait = "5s"}

[stage.mail]
script = mail-from.sieve
timeout = 10

[[stage.mail.throttle]]
key = "mail-from"
concurrency = 10
rate = [3, 60]

[stage.rcpt]
script = rcpt-to.sieve
relay = [
    {if = ["is-local-rcpt", "is-submission"], then = true},
    {else = false}
]
throttle = [{key = "rcpt-to", concurrency = 10, rate = [3, 60]}]
errors = {total = 3, wait = "5s"}
max-recipients = 100

[stage.data]
script = data.sieve
timeout = "10s"

[stage.data.limits]
messages = 10
message-size = 100000
received-headers = 50
mime-parts = 50
nested-messages = 3

[state.data.add-headers]
received = true
received-spf = true
return-path = true
auth-results = true
message-id = true
date = true

[stage.queue]
script = queue.sieve
queue-id = "local"

[dkim]
verify = "strict"

[dkim.sign]
pki = "cert"
domain = ""
selector = ""
headers = ["From", "To", "Date", "Message-ID"]
algorithm = "rsa-sha256"
canonicalization = "simple/relaxed"
expire = "10d"
third-party = ""
third-party-algo = ""
auid = ""
set-body-length = false
reporting = true

[spf]
verify-ehlo = ""
verify-mail-from = ""

[arc]
verify = "strict"

[arc.seal]
pki = "cert"
domain = ""
selector = ""
headers = ["From", "To", "Date", "Message-ID", "DKIM-Signature"]
algorithm = "rsa-sha256"
canonicalization = "simple/relaxed"
expire = "10d"
set-body-length = false

[external]

[remote."lmtp"]
address = 192.168.0.1
port = 25
protocol = "lmtp"
tls = "optional, require, dane, dane-fallback-require, dane-require

[remote."lmtp".auth]
username = "hello"
password = "world"

[remote."lmtp".cache]
entries = 1000
ttl = {positive = 10, negative = 5}


[queue]
retry = [0, 1, 15, 60, 90]
notify = [9, 10]
prefer = ipv6
source-ips = ["192.168.0.2", "162.168.0.1"]
tls = optional, require, dane, dane-fallback-require, dane-require
relay-host = "lmtp"

[queue.limits]
attempts = 100
time = 3600
queued-messages = 10000
queue-size = 1000000

[[queue.throttle]]
rate = "1/60s"
concurrency = 1000
key = ["remote-ip"]


[rule]
is-local = { op = "any-of", value = [
    {key = "rcpt-domain", op = "eq", value = ""}
]}

is-local = [
    {key = "rcpt-domain", eq = ["example.org"]}
]
rcpt-domain = {equal-to = ["*.example.org"], match = any}
rcpt = [""]
server-id = "relay"
mx = ["mx.gmail.com", "mx.coco.com"]
remote-ip = [192.168.0.32/1]
priority = 1

[resolver]
type = system, google, cloudflare
strategy = "ipv6"
dnssec = true
preserve-intermediates = true
concurrency = 2
timeout = 100
attempts = 3

[resolver.cache]
a = 1000
mx = 9393
txt = 3233

[general.spool]
path = "/var/spool/queue"
hash = 123

[scripts]

[scripts]
ehlo = this is my script


[list.inline]
local-domains = ["example.org", "*.example.net"]

[list.remote]
local-addresses = "lmtp"

[list.local]
local-users = "/tmp/file.txt"


[servers."relay".outgoing.dsn]
name = "Mail Delivery Subsystem"
address = "MAILER-DAEMON"
subject = "Delivery Status Notification"

[servers."relay".outgoing.auth-failure]
name = "Autentication Report"
address = "noreply-auth-failure"
subject = "Authentication Failure Report"

[servers."relay".outgoing.dmarc]
name = "DMARC report"
address = "noreply-dmarc"
subject = "DMARC aggregate report for $1"

[servers."relay".dmarc]
send-reports = true
report-frequency = requested, 86400
incoming-address = "dmarc@*"

[key]
[key."default"]
type = "rsa"
certificate = '''
-----BEGIN CERTIFICATE-----
'''
private-key = '''
-----BEGIN PRIVATE KEY-----
'''

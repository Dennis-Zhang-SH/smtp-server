[envelope]
rcpt-domain = "example.org"
rcpt = "user@example.org"
sender-domain = "foo.net"
sender = "bill@foo.net"
local-ip = "192.168.9.3"
remote-ip = "A:B:C::D:E"
mx = "mx.somedomain.com"
authenticated-as = "john@foobar.org"
priority = -4
listener-id = 123

[rule]
"eq-true" = {key = "rcpt-domain", op = "eq", value = "example.org"}
"eq-false" = {key = "rcpt-domain", op = "eq", value = "example.com"}
"listener-eq-true" = {key = "listener", op = "eq", value = "smtp"}
"listener-eq-false" = {key = "listener", op = "eq", value = "smtps"}
"ip-eq-true" = {key = "local-ip", op = "eq", value = "192.168.9.0/24"}
"ip-eq-false" = {key = "remote-ip", op = "eq", value = "A:B:C::D:F/128"}
"ne-true" = {key = "authenticated-as", op = "ne", value = ""}
"ne-false" = {key = "authenticated-as", op = "ne", value = "john@foobar.org"}
"starts-with-true" = {key = "mx", op = "starts-with", value = "mx.some"}
"starts-with-false" = {key = "mx", op = "starts-with", value = "enchilada"}
"ends-with-true" = {key = "sender", op = "ends-with", value = "@foo.net"}
"ends-with-false" = {key = "sender", op = "ends-with", value = "chimichanga"}
"in-list-true" = {key = "sender-domain", op = "in-list", value = "domains"}
"in-list-false" = {key = "rcpt-domain", op = "in-list", value = "domains"}
"not-in-list-true" = {key = "rcpt-domain", op = "not-in-list", value = "domains"}
"not-in-list-false" = {key = "sender-domain", op = "not-in-list", value = "domains"}
"regex-true" = {key = "sender", op = "regex-match", value = "^(.+)@(.+)$"}
"regex-false" = {key = "mx", op = "regex-match", value = "/^\\S+@\\S+\\.\\S+$/"}

"any-of-true" = { op = "any-of", value = [
    {key = "authenticated-as", op = "ne", value = "john@foobar.org"},
    {key = "rcpt-domain", op = "eq", value = "example.org"},
    {key = "mx", op = "starts-with", value = "mx.some"},
]}
"any-of-false" = { op = "any-of", value = [
    {key = "authenticated-as", op = "eq", value = "something else"},
    {key = "rcpt-domain", op = "eq", value = "something else"},
    {key = "mx", op = "starts-with", value = "something else"},
]}
"all-of-true" = { op = "all-of", value = [
    {key = "rcpt-domain", op = "eq", value = "example.org"},
    {key = "listener", op = "eq", value = "smtp"},
    {key = "mx", op = "starts-with", value = "mx.some"}
]}
"all-of-false" = { op = "all-of", value = [
    {key = "rcpt-domain", op = "eq", value = "example.org"},
    {key = "listener", op = "eq", value = "smtp"},
    {key = "mx", op = "starts-with", value = "something else"}
]}
"none-of-true" = { op = "none-of", value = [
    {key = "authenticated-as", op = "eq", value = "something else"},
    {key = "rcpt-domain", op = "eq", value = "something else"},
    {key = "mx", op = "starts-with", value = "something else"},
]}
"none-of-false" = { op = "none-of", value = [
    {key = "rcpt-domain", op = "eq", value = "example.org"},
    {key = "listener", op = "eq", value = "smtp"},
    {key = "mx", op = "starts-with", value = "mx.some"}
]}
nested-any-of-true = { op = "any-of", value = [
    { op = "all-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "something else"}
    ]},
    { op = "none-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "mx.some"}
    ]},
    { op = "any-of", value = [
        {key = "authenticated-as", op = "ne", value = "john@foobar.org"},
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "mx", op = "starts-with", value = "mx.some"},
    ]}
]}
nested-any-of-false = { op = "any-of", value = [
    { op = "none-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "mx.some"}
    ]},
    { op = "all-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "something else"}
    ]},
    { op = "any-of", value = [
        {key = "authenticated-as", op = "eq", value = "something else"},
        {key = "rcpt-domain", op = "eq", value = "something else"},
        {key = "mx", op = "starts-with", value = "something else"},
    ]}
]}
nested-all-of-true = { op = "all-of", value = [
    { op = "any-of", value = [
        {key = "authenticated-as", op = "ne", value = "john@foobar.org"},
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "mx", op = "starts-with", value = "mx.some"},
    ]},
    { op = "all-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "mx.some"}
    ]},
    { op = "none-of", value = [
        {key = "authenticated-as", op = "eq", value = "something else"},
        {key = "rcpt-domain", op = "eq", value = "something else"},
        {key = "mx", op = "starts-with", value = "something else"},
    ]}
]}
nested-all-of-false = { op = "all-of", value = [
    { op = "any-of", value = [
        {key = "authenticated-as", op = "ne", value = "john@foobar.org"},
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "mx", op = "starts-with", value = "mx.some"},
    ]},
    { op = "all-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "mx.some"}
    ]},
    { op = "none-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "mx.some"}
    ]}
]}
nested-none-of-true = { op = "none-of", value = [
    { op = "none-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "mx.some"}
    ]},
    { op = "all-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "something else"}
    ]},
    { op = "any-of", value = [
        {key = "authenticated-as", op = "eq", value = "something else"},
        {key = "rcpt-domain", op = "eq", value = "something else"},
        {key = "mx", op = "starts-with", value = "something else"},
    ]}
]}
nested-none-of-false = { op = "none-of", value = [
    { op = "any-of", value = [
        {key = "authenticated-as", op = "ne", value = "john@foobar.org"},
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "mx", op = "starts-with", value = "mx.some"},
    ]},
    { op = "all-of", value = [
        {key = "rcpt-domain", op = "eq", value = "example.org"},
        {key = "listener", op = "eq", value = "smtp"},
        {key = "mx", op = "starts-with", value = "mx.some"}
    ]},
    { op = "none-of", value = [
        {key = "authenticated-as", op = "eq", value = "something else"},
        {key = "rcpt-domain", op = "eq", value = "something else"},
        {key = "mx", op = "starts-with", value = "something else"},
    ]}
]}

[list.inline]
domains = ["mydomain1.org", "foo.net", "otherdomain.net"]
